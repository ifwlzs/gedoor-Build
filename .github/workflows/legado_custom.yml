name: LegadoCustom

on: 
  watch:
    types: [started]
    git_url:
      description: 'Your legado git url'
      required: true
      default: 'https://github.com/gedoor/legado.git'
    git_tag:
      description: 'Your legado git tag'
      required: true
      default: 'master'
    app_custom:
      description: 'Your legado custom script'
      required: true
      default: 'diy_10bits.sh'
    app_name:
      description: 'Legado app name'
      required: true
      default: '阅读A'
    app_suffix:
      description: 'Legado app suffix'
      required: true
      default: 'A'
    app_launch_name:
      description: 'Legado app launch name'
      required: true
      default: '阅读A'
    app_rename:
      description: 'Legado app rename enable'
      required: true
      default: 'true'


jobs:
  build_apk:
    if: github.repository_owner == github.actor
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: setup JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17
        
    - name: set env
      shell: bash
      env:
        SECRETS_APP_NAME: ${{ github.event.app_name }}
        SECRETS_GIT_URL: ${{ github.event.git_url }}
        SECRETS_SUFFIX: ${{ github.event.app_suffix }}
        SECRETS_ENABLE: ${{ secrets.ENABLE }}
        SECRETS_MINIFY: ${{ secrets.MINIFY }}
        SECRETS_RENAME: ${{ github.event.app_rename }}
        REPO_OWNER: ${{ github.repository_owner }}
        REPO_ACTOR: ${{ github.actor }}
        SECRETS_TAG: ${{ github.event.git_tag }}
        SECRETS_LAUNCH_NAME: ${{ github.event.app_launch_name }}
      run: source $GITHUB_WORKSPACE/action_setenv.sh
    
    - name: clone code
      shell: bash
      run: source $GITHUB_WORKSPACE/action_clone.sh

    - name: custom your app
      shell: bash
      env:
        custom: ${{ github.event.app_custom }}
      run: |
        echo source $GITHUB_WORKSPACE/diy/$custom
        
    - name: build  your app
      if: success()
      shell: bash
      run: |
        source $GITHUB_WORKSPACE/action_app_build.sh
        app_build

    - name: upload artifact
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: ${{ env.APP_UPLOAD_NAME }}
        path: ${{ env.APP_UPLOAD }}

    - name: upload to webdav
      if: success()
      shell: bash
      env:
        WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
        WEBDAV_AUTH: ${{ secrets.WEBDAV_AUTH }}
        WEBDAV_UPLOAD: ${{ secrets.WEBDAV_UPLOAD }}
      run: |
        source $GITHUB_WORKSPACE/action_util.sh
        webdav_upload $APP_UPLOAD/*.apk
        
